"use strict";(self.webpackChunkansible_nas=self.webpackChunkansible_nas||[]).push([[1852],{9166:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var s=i(5893),t=i(1151);const a={title:"MiniDLNA"},o=void 0,r={id:"applications/media-serving/minidlna",title:"MiniDLNA",description:"Homepage//sourceforge.net/projects/minidlna/",source:"@site/docs/applications/media-serving/minidlna.md",sourceDirName:"applications/media-serving",slug:"/applications/media-serving/minidlna",permalink:"/docs/applications/media-serving/minidlna",draft:!1,unlisted:!1,editUrl:"https://github.com/davestephens/ansible-nas/tree/main/website/docs/applications/media-serving/minidlna.md",tags:[],version:"current",frontMatter:{title:"MiniDLNA"},sidebar:"tutorialSidebar",previous:{title:"Komga",permalink:"/docs/applications/media-serving/komga"},next:{title:"My Media for Alexa",permalink:"/docs/applications/media-serving/mymediaforalexa"}},c={},l=[{value:"Usage",id:"usage",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Homepage: ",(0,s.jsx)(n.a,{href:"https://sourceforge.net/projects/minidlna/",children:"https://sourceforge.net/projects/minidlna/"})]}),"\n",(0,s.jsx)(n.p,{children:"MiniDLNA is server software with the aim of being fully compliant with DLNA/UPnP clients. The MiniDNLA daemon serves media files (music, pictures, and video) to clients on a network. Example clients include applications such as Totem and Kodi, and devices such as portable media players, Smartphones, Televisions, and gaming systems (such as PS3 and Xbox 360)."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["Set ",(0,s.jsx)(n.code,{children:"minidlna_enabled: true"})," in your ",(0,s.jsx)(n.code,{children:"inventories/<your_inventory>/group_vars/nas.yml"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["The very basic MiniDLNA web interface can be found at ",(0,s.jsx)(n.a,{href:"http://ansible_nas_host_or_ip:8201",children:"http://ansible_nas_host_or_ip:8201"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>o});var s=i(7294);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);