"use strict";(self.webpackChunkansible_nas=self.webpackChunkansible_nas||[]).push([[8416],{9269:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var i=n(5893),o=n(1151);const s={title:"Ubooquity"},a=void 0,r={id:"applications/media-serving/threadfin",title:"Ubooquity",description:"Homepage//github.com/Threadfin/Threadfin",source:"@site/docs/applications/media-serving/threadfin.md",sourceDirName:"applications/media-serving",slug:"/applications/media-serving/threadfin",permalink:"/docs/applications/media-serving/threadfin",draft:!1,unlisted:!1,editUrl:"https://github.com/davestephens/ansible-nas/tree/main/website/docs/applications/media-serving/threadfin.md",tags:[],version:"current",frontMatter:{title:"Ubooquity"},sidebar:"tutorialSidebar",previous:{title:"Tautulli",permalink:"/docs/applications/media-serving/tautulli"},next:{title:"Ubooquity",permalink:"/docs/applications/media-serving/ubooquity"}},c={},d=[{value:"Usage",id:"usage",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Homepage: ",(0,i.jsx)(t.a,{href:"https://github.com/Threadfin/Threadfin",children:"https://github.com/Threadfin/Threadfin"})]}),"\n",(0,i.jsxs)(t.p,{children:["Documentation: ",(0,i.jsx)(t.a,{href:"https://github.com/xteve-project/xTeVe-Documentation/blob/master/en/configuration.md",children:"https://github.com/xteve-project/xTeVe-Documentation/blob/master/en/configuration.md"})]}),"\n",(0,i.jsxs)(t.p,{children:["Docker Image: ",(0,i.jsx)(t.a,{href:"https://hub.docker.com/r/fyb3roptik/threadfin",children:"https://hub.docker.com/r/fyb3roptik/threadfin"})]}),"\n",(0,i.jsx)(t.p,{children:"Threadfin is a M3U proxy server for Plex, Emby, Jellyfin and any client and provider which supports the .TS and .M3U8 (HLS) streaming formats."}),"\n",(0,i.jsx)(t.p,{children:"Threadfin emulates a SiliconDust HDHomeRun OTA tuner, which allows it to expose IPTV style channels to software, which would not normally support it."}),"\n",(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(t.p,{children:["Set ",(0,i.jsx)(t.code,{children:"threadfin_enabled: true"})," in your ",(0,i.jsx)(t.code,{children:"inventories/<your_inventory>/group_vars/nas.yml"})," file."]}),"\n",(0,i.jsxs)(t.p,{children:["Access the webui at ",(0,i.jsx)(t.a,{href:"http://ansible_nas_host_or_ip:34400/web",children:"http://ansible_nas_host_or_ip:34400/web"})," by default. See specific configuration section below for information on setting up external access."]})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>a});var i=n(7294);const o={},s=i.createContext(o);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);