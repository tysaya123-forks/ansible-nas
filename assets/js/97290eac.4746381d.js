"use strict";(self.webpackChunkansible_nas=self.webpackChunkansible_nas||[]).push([[1037],{7537:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=n(5893),r=n(1151);const i={title:"FreshRSS"},o=void 0,a={id:"applications/news/freshrss",title:"FreshRSS",description:"Homepage//freshrss.org/",source:"@site/docs/applications/news/freshrss.md",sourceDirName:"applications/news",slug:"/applications/news/freshrss",permalink:"/docs/applications/news/freshrss",draft:!1,unlisted:!1,editUrl:"https://github.com/davestephens/ansible-nas/tree/main/website/docs/applications/news/freshrss.md",tags:[],version:"current",frontMatter:{title:"FreshRSS"},sidebar:"tutorialSidebar",previous:{title:"News",permalink:"/docs/category/news"},next:{title:"Miniflux",permalink:"/docs/applications/news/miniflux"}},c={},l=[{value:"Usage",id:"usage",level:2}];function p(e){const s={a:"a",code:"code",h2:"h2",p:"p",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["Homepage: ",(0,t.jsx)(s.a,{href:"https://freshrss.org/",children:"https://freshrss.org/"})]}),"\n",(0,t.jsx)(s.p,{children:"FreshRSS is a self-hosted RSS feed aggregator like Leed or Kriss Feed."}),"\n",(0,t.jsx)(s.p,{children:"It is lightweight, easy to work with, powerful, and customizable."}),"\n",(0,t.jsx)(s.p,{children:"It is a multi-user application with an anonymous reading mode. It supports custom tags. There is an API for (mobile) clients, and a Command-Line Interface."}),"\n",(0,t.jsx)(s.p,{children:"Thanks to the WebSub standard (formerly PubSubHubbub), FreshRSS is able to receive instant push notifications from compatible sources, such as Mastodon, Friendica, WordPress, Blogger, FeedBurner, etc."}),"\n",(0,t.jsx)(s.p,{children:"FreshRSS natively supports basic Web scraping, based on XPath, for Web sites not providing any RSS / Atom feed."}),"\n",(0,t.jsx)(s.p,{children:"Finally, it supports extensions for further tuning."}),"\n",(0,t.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(s.p,{children:["Set ",(0,t.jsx)(s.code,{children:"freshrss_enabled: true"})," in your ",(0,t.jsx)(s.code,{children:"inventories/<your_inventory>/group_vars/nas.yml"})," file."]}),"\n",(0,t.jsxs)(s.p,{children:["The FreshRSS web interface can be found at ",(0,t.jsx)(s.a,{href:"http://ansible_nas_host_or_ip:8089",children:"http://ansible_nas_host_or_ip:8089"}),"."]})]})}function d(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>a,a:()=>o});var t=n(7294);const r={},i=t.createContext(r);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);