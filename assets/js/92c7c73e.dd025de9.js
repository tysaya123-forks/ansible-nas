"use strict";(self.webpackChunkansible_nas=self.webpackChunkansible_nas||[]).push([[1765],{9098:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=n(5893),a=n(1151);const o={title:"Stats"},r=void 0,i={id:"applications/monitoring/stats",title:"Stats",description:"The stats role uses Prometheus, Grafana, Telegraf and a number of metrics exporters to collect and record lots of metrics about your NAS.",source:"@site/docs/applications/monitoring/stats.md",sourceDirName:"applications/monitoring",slug:"/applications/monitoring/stats",permalink:"/docs/applications/monitoring/stats",draft:!1,unlisted:!1,editUrl:"https://github.com/davestephens/ansible-nas/tree/main/website/docs/applications/monitoring/stats.md",tags:[],version:"current",frontMatter:{title:"Stats"},sidebar:"tutorialSidebar",previous:{title:"Speedtest-Tracker",permalink:"/docs/applications/monitoring/speedtest"},next:{title:"Wireshark",permalink:"/docs/applications/monitoring/wireshark"}},c={},l=[{value:"Usage",id:"usage",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"The stats role uses Prometheus, Grafana, Telegraf and a number of metrics exporters to collect and record lots of metrics about your NAS."}),"\n",(0,s.jsx)(t.p,{children:"Telegraf also exposes an InfluxDB endpoint for applications that require it."}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(t.p,{children:["Set ",(0,s.jsx)(t.code,{children:"stats_enabled: true"})," in your ",(0,s.jsx)(t.code,{children:"inventories/<your_inventory>/group_vars/nas.yml"})," file. If you want to gather metrics on your internet connection, enable ",(0,s.jsx)(t.code,{children:"stats_internet_speed_test_enabled"})," too."]}),"\n",(0,s.jsxs)(t.p,{children:["If you want to access Grafana externally, set ",(0,s.jsx)(t.code,{children:"stats_grafana_available_externally: true"})," in your ",(0,s.jsx)(t.code,{children:"inventories/<your_inventory>/group_vars/nas.yml"})," file. If you want to access Promethehus externally, set ",(0,s.jsx)(t.code,{children:"stats_prometheus_available_externally: true"})," in your ",(0,s.jsx)(t.code,{children:"inventories/<your_inventory>/group_vars/nas.yml"})," file."]}),"\n",(0,s.jsxs)(t.p,{children:["The Grafana web interface can be found at ",(0,s.jsx)(t.a,{href:"http://ansible_nas_host_or_ip:3000",children:"http://ansible_nas_host_or_ip:3000"}),", Prometheus can be found at ",(0,s.jsx)(t.a,{href:"http://ansible_nas_host_or_ip:9090",children:"http://ansible_nas_host_or_ip:9090"})]})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>r});var s=n(7294);const a={},o=s.createContext(a);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);