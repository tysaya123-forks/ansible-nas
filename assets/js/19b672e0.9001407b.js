"use strict";(self.webpackChunkansible_nas=self.webpackChunkansible_nas||[]).push([[2571],{5731:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var s=t(5893),i=t(1151);const o={title:"DDNS Updater"},a=void 0,r={id:"applications/system-tools/ddns_updater",title:"DDNS Updater",description:"Lightweight universal DDNS Updater with a web UI.",source:"@site/docs/applications/system-tools/ddns_updater.md",sourceDirName:"applications/system-tools",slug:"/applications/system-tools/ddns_updater",permalink:"/docs/applications/system-tools/ddns_updater",draft:!1,unlisted:!1,editUrl:"https://github.com/davestephens/ansible-nas/tree/main/website/docs/applications/system-tools/ddns_updater.md",tags:[],version:"current",frontMatter:{title:"DDNS Updater"},sidebar:"tutorialSidebar",previous:{title:"Cloudflare DDNS",permalink:"/docs/applications/system-tools/cloudflare_ddns"},next:{title:"Duplicacy",permalink:"/docs/applications/system-tools/duplicacy"}},d={},c=[{value:"Usage",id:"usage",level:2},{value:"Specific Configuration",id:"specific-configuration",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Lightweight universal DDNS Updater with a web UI."}),"\n",(0,s.jsxs)(n.p,{children:["Homepage: ",(0,s.jsx)(n.a,{href:"https://github.com/qdm12/ddns-updater",children:"https://github.com/qdm12/ddns-updater"})]}),"\n",(0,s.jsx)(n.p,{children:"Light container updating DNS A and/or AAAA records periodically for multiple DNS providers."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["Set ",(0,s.jsx)(n.code,{children:"ddns_updater_enabled: true"})," in your ",(0,s.jsx)(n.code,{children:"inventories/<your_inventory>/group_vars/nas.yml"})," file."]}),"\n",(0,s.jsx)(n.h2,{id:"specific-configuration",children:"Specific Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Ensure that the ",(0,s.jsx)(n.code,{children:"ddns_updater_config"})," variable is set with your DDNS Updater configuration. The configuration is converted from YAML into JSON, required by the DDNS Updater application. Use ",(0,s.jsx)(n.a,{href:"https://www.json2yaml.com/",children:"json2yaml"})," to check your configuration format."]}),"\n",(0,s.jsx)(n.p,{children:"The following configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'ddns_updater_config:\n  settings:\n    - provider: namecheap\n      domain: example.com\n      host: "@"\n      password: e5322165c1d74692bfa6d807100c0310\n'})}),"\n",(0,s.jsx)(n.p,{children:"...will be serialised to:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "settings": [\n        {\n            "provider": "namecheap",\n            "domain": "example.com",\n            "host": "@",\n            "password": "e5322165c1d74692bfa6d807100c0310"\n        }\n    ]\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>a});var s=t(7294);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);